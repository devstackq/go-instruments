Anaotomy services
//router - запрос - вызов функции
gorilla/mux, http.router
//auth - signup, signin
//logging - message
//error handler
//валиджация входных праметров
//валидация входных параметров
//шаблонизация
// кофнигурирование
//мониторинг
//middleware, framework
//работа с БД
//grpc, microservices
// rabbitmq

context.Value()

middleware - для обертки других функций, возвращает функцию.(ФВП)
что бы кадому хенлеру/функции не писать одну и ту же функцию - Декоратор паттерн

Ошибки обрабатывать, в понятном виде, где и что произошло и какие парметры были
return fmt.Errorf() - вернет ошибку с нашим текстом
errors.New() // именновыные ошибки
error - interface
custom ошибка -> sturct , method


Routers
ЧПУ - человекопонятный урл
Обычный http router огрничен, метод - парсить нельзя парматеры напрямую 
gorilla/mux - гибки, многофункциональный - но медленный
httprouter - быстрйый, но малофункциональный

Можно использовать несколько роутеоров за раз
gorilla/mux, fasthttp, etc

govalidator - библиотека для валидирования значений(структура)

gorilla/schema - парсит парметры из urlk - в стурктуру

framworks - beego - auth, 
gin - recover()

https://github.com/golang-standards/project-layout/blob/master/README_ru.md
https://medium.com/nuances-of-programming/go-%D0%BF%D1%80%D0%BE%D1%80%D0%B0%D0%B1%D0%B0%D1%82%D1%8B%D0%B2%D0%B0%D0%B5%D0%BC-25-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D1%85-%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D0%BE%D0%B2-%D1%81%D0%BE%D0%B1%D0%B5%D1%81%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-44787ce56403
https://refactoring.guru/ru/design-patterns/factory-method
https://habr.com/ru/post/520278/
https://habr.com/ru/company/vk/blog/314804/
https://habr.com/ru/post/308198/
https://habr.com/ru/post/325468/
https://yourbasic.org/golang/blueprint/
https://golang.org/doc/effective_go
https://www.druva.com/blog/concurrent-and-efficient-pipelines-using-golang-channels/
https://medium.com/nuances-of-programming/%D0%BD%D0%B0%D0%B1%D0%BE%D1%80-%D0%B8%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2-go-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-%D0%BC%D0%B8%D0%BA%D1%80%D0%BE%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%B0%D0%BC%D0%B8-b5b3fe277ba3
https://habr.com/ru/post/425025/

https://mholt.github.io/json-to-go/
https://ueokande.github.io/go-slice-tricks/